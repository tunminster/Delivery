using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Delivery.Azure.Library.Contracts.Interfaces.V1.Contracts;
using Delivery.Azure.Library.Core.Extensions.Objects;

namespace Delivery.Azure.Library.Storage.Cosmos.Contracts
{
    [DataContract]
    public class DocumentContract<TData> : IDocumentContract<TData>, IVersionedContract
    {
        /// <summary>
        ///     Unique id auto generated by the system
        /// </summary>
        public Guid? Id { get; set; }

        /// <summary>
        ///     Partition key for the given collection
        /// </summary>
        [Required]
        // ReSharper disable once UnassignedGetOnlyAutoProperty
        public virtual string? PartitionKey { get; set; }

        /// <summary>
        ///     Version
        /// </summary>
        [DataMember]
        [Required]
        [Range(minimum: 1, maximum: 99999999)]
        public int Version { get; set; }

        /// <summary>
        ///     Inserted by derived from the request header
        /// </summary>
        [DataMember]
        public string? InsertedBy { get; set; }

        /// <summary>
        ///     DateTime that the document was inserted
        /// </summary>
        public DateTimeOffset? InsertionDate { get; set; }

        /// <summary>
        ///     DateTime that the document is valid from
        /// </summary>
        [Required]
        public DateTimeOffset? ValidFromDate { get; set; }

        /// <summary>
        ///     DateTime that the document is valid to
        /// </summary>
        public DateTimeOffset? ValidToDate { get; set; } = new DateTimeOffset(year: 2099, month: 1, day: 1, hour: 0, minute: 0, second: 0, TimeSpan.Zero);

        /// <summary>
        ///     Generic collection of data items for the document
        /// </summary>
        [DataMember]
        public List<TData> Data { get; set; } = new();

        public override string ToString()
        {
            return $"{GetType().Name}: {nameof(Id)}: {Id.Format()}, " +
                   $"{nameof(PartitionKey)}: {PartitionKey.Format()}, " +
                   $"{nameof(Version)}: {Version.Format()}, " +
                   $"{nameof(Data)}: {Data.Format()}, " +
                   $"{nameof(InsertedBy)}: {InsertedBy.Format()}, " +
                   $"{nameof(InsertionDate)}: {InsertionDate.Format()}, " +
                   $"{nameof(ValidFromDate)}: {ValidFromDate.Format()}, " +
                   $"{nameof(ValidToDate)}: {ValidToDate.Format()}, " +
                   $"{nameof(Data)}: {Data.Format()}";
        }
    }
}